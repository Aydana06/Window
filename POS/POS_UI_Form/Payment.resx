<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>